# yaml-language-server: $schema=https://raw.githubusercontent.com/docker/compose/master/compose/config/compose_spec.json

volumes:
  aoc_local_bitswan_backend_postgres_data: {}
  aoc_local_bitswan_backend_postgres_data_backups: {}
  aoc_local_portainer_data:
  aoc_local_influx_data:
  aoc_local_influx_config:
  aoc_local_emqx_data:
  aoc_local_keycloak_postgres_data: {}
  aoc_local_keycloak_postgres_data_backups: {}
  aoc_local_mailpit_data: {}

networks:
  bitswan_network:
    external: true

services:
  django:
    build:
      context: ../django
      dockerfile: ./compose/local/django/Dockerfile
    container_name: aoc-bitswan-backend
    restart: always
    networks:
      - bitswan_network
    depends_on:
      bitswan-backend-postgres:
        condition: service_started
      redis:
        condition: service_started
      keycloak-health:
        condition: service_started
    volumes:
      - ../django:/app:z
      - ../django/compose/local/rathole/server.toml:/etc/rathole/rathole.toml:z
      - ../django/compose/local/traefik/config/routes.yml:/etc/traefik/routes.yaml:z
      - /var/run/docker.sock:/var/run/docker.sock:rw

    env_file:
      - envs/bitswan-backend.env
      - envs/bitswan-backend-postgres.env
    ports:
      - "8000:8000"
      - "5678:5678"
    command: /start

  bitswan-backend-postgres:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    container_name: aoc-bitswan-backend-postgres
    networks:
      - bitswan_network
    restart: always
    volumes:
      - aoc_local_bitswan_backend_postgres_data:/var/lib/postgresql/data
      - aoc_local_bitswan_backend_postgres_data_backups:/backups
    env_file:
      - envs/bitswan-backend-postgres.env
    ports:
      - 5432:5432

  keycloak-postgres:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    restart: always
    networks:
      - bitswan_network
    container_name: aoc-keycloak-postgres
    volumes:
      - aoc_local_keycloak_postgres_data:/var/lib/postgresql/data
      - aoc_local_keycloak_postgres_data_backups:/backups
    env_file: envs/keycloak-postgres.env
    ports:
      - 5434:5432

  redis:
    image: docker.io/redis:6
    networks:
      - bitswan_network
    container_name: aoc-redis
    ports:
      - 6379:6379

  influxdb:
    image: influxdb:2.0
    restart: always
    networks:
      - bitswan_network
    container_name: aoc-influxdb
    ports:
      - "8086:8086"
    volumes:
      - aoc_local_influx_data:/var/lib/influxdb2
      - aoc_local_influx_config:/etc/influxdb2
    env_file:
      - envs/influxdb.env
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup

  emqx:
    image: emqx:latest
    networks:
      - bitswan_network
    container_name: aoc-emqx
    restart: "no"
    ports:
      - "1883:1883"
      - "8083:8083"
      - "8084:8084"
      - "8883:8883"
      - "18083:18083"
    env_file:
      - envs/emqx.env
    volumes:
      - aoc_local_emqx_data:/opt/emqx/data
      - ./emqx/emqx.conf:/opt/emqx/etc/emqx.conf

  keycloak:
    image: bitswan/bitswan-keycloak:2025-16048144305-git-cbd0bbc
    networks:
      - bitswan_network
    restart: always
    container_name: aoc-keycloak
    ports:
      - "9000:9000"
      - "8080:8080"
    env_file:
      - envs/keycloak.env
    command: start-dev

  keycloak-health:
    image: curlimages/curl:latest
    depends_on:
      - keycloak
    restart: "no"
    volumes:
      - ./scripts/keycloak-healthcheck.sh:/healthcheck.sh
    entrypoint: ["/healthcheck.sh"]
    network_mode: "host"

  aoc-nextjs:
    build:
      context: ../nextjs
      dockerfile: ./dev.dockerfile
    container_name: aoc-nextjs
    networks:
      - bitswan_network
    env_file:
      - ./envs/operations-centre.env
    ports:
      - "3000:3000"
    volumes:
      - ../nextjs:/app:z
      - /app/node_modules

  mailpit:
    networks:
      - bitswan_network
    image: axllent/mailpit
    container_name: mailpit
    restart: unless-stopped
    volumes:
      - aoc_local_mailpit_data:/data
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
